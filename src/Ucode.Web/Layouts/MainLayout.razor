@inherits LayoutComponentBase

<MudThemeProvider @ref="_mudThemeProvider"
                  @bind-IsDarkMode="_isDarkMode"
                  Theme="Configuration.Theme" />
<MudDialogProvider />
<MudSnackbarProvider />



<AuthorizeView>
    <Authorized>
        <MudLayout>
            <MudAppBar>
                <MudIconButton 
                    Icon="@Icons.Material.Filled.Menu"
                    Color="Color.Inherit"
                    Edge="Edge.Start"
                    OnClick="TogglerDrawer"/>
                Ucode
                <MudSpacer />
                <MudText Typo="Typo.caption">
                    @context.User.Identity?.Name
                </MudText>
                <MudSwitch
                    Color="Color.Inherit"
                    @bind-Value="@_isDarkMode" 
                    T ="bool"
                    Class="ma-4"
                    ThumbIcon="@Icons.TwoTone.Lightbulb"/>
            </MudAppBar>
            <MudDrawer Open="_isDrawerOpened">
                <NavMenu />
            </MudDrawer>
            <MudMainContent>
                <MudContainer Class="mt-4"> 
                    @Body
                </MudContainer>
            </MudMainContent>
        </MudLayout>
    </Authorized>
    <NotAuthorized>
       <LoginRedirect />
    </NotAuthorized>
</AuthorizeView>

@code
{
    private bool _isDrawerOpened = true;
    private bool _isDarkMode = true;
    private MudThemeProvider _mudThemeProvider = null!;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if(firstRender)
        {
            _isDarkMode = await _mudThemeProvider.GetSystemPreference();
            await _mudThemeProvider.WatchSystemPreference(OnSystemPreferenceChanged);
            StateHasChanged();
        }
    }

    private Task OnSystemPreferenceChanged(bool newValue) // Mudanda de estado
    {
        _isDarkMode = newValue;
        StateHasChanged(); // para alterar o estado 
        return Task.CompletedTask;
    } 

    private void TogglerDrawer()
        => _isDrawerOpened =! _isDrawerOpened;
    

}
